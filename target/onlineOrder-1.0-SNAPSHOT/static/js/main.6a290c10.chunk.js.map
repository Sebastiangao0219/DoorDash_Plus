{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","loginUrl","username","password","fetch","method","headers","credentials","then","response","status","Error","LoginForm","state","onFinish","values","setState","console","log","message","success","props","onSuccess","catch","err","error","finally","loading","name","className","initialValues","remember","this","Item","rules","required","prefix","UserOutlined","placeholder","Password","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","foodData","setFoodData","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","useEffect","json","data","restId","value","onSelect","style","width","onChange","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","marginRight","disabled","orderItemList","length","itemLayout","Meta","menuitem","description","Header","Layout","Content","Title","App","authed","setAuthed","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a290c10.chunk.js","sourcesContent":["// includes all the request to the server\nexport const login = (credential) => {\n    const loginUrl = `/login?username=${credential.username}&password=${credential.password}`;\n\n    return fetch(loginUrl, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to log in\");\n        }\n    });\n};\n\n// fetch menu api\nexport const getMenus = (restId) => {\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get menus\");\n        }\n\n        return response.json();\n    });\n};\n\n// fetch restaurant api\nexport const getRestaurants = () => {\n    return fetch(\"/restaurants\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get restaurants\");\n        }\n\n        return response.json();\n    });\n};\n// fetch cart api\nexport const getCart = () => {\n    return fetch(\"/cart\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to get shopping cart data\");\n        }\n\n        return response.json();\n    });\n};\n\n// checkout api\nexport const checkout = () => {\n    return fetch(\"/checkout\").then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to checkout\");\n        }\n    });\n};\n\n// add item to cart api\nexport const addItemToCart = (itemId) => {\n    return fetch(`/order/${itemId}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        credentials: \"include\",\n    }).then((response) => {\n        if (response.status < 200 || response.status >= 300\n        ) {\n            throw Error(\"Fail to add menu item to shopping cart\");\n        }\n    });\n};","import React, {Component} from 'react';\nimport {Form, Input, Button, message} from 'antd';\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {login} from \"../utils\";\n\n\nclass LoginForm extends Component {\n    state = {\n        login: false\n    }\n    onFinish = (values) => {\n        // step1: set loading to true\n        this.setState({login: true});\n        // step2: send login request (call login api) to the server\n        // step3: deal with login status -> logged in or not\n        // step4: set loading false\n        console.log('Received values of form: ', values);\n        login(values)\n            .then(() => {\n                // show login sucess\n                message.success('Login Successfully');\n                this.props.onSuccess();\n            })\n            .catch(err => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                this.setState({loading: false});\n            })\n    };\n\n    render() {\n        return (\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={this.onFinish}\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    {/* Input.Password 会加一个小眼睛在password input里面*/}\n                    <Input.Password\n                        prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n\n                <Form.Item>\n                    <Button\n                        type=\"primary\"\n                        htmlType=\"submit\"\n                        className=\"login-form-button\"\n                        loading={this.state.loading}\n                    >\n                        Log in\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n}\n\nexport default LoginForm;","import {Button, Card, List, message, Select, Tooltip} from \"antd\";\nimport {useEffect, useState} from \"react\";\nimport {addItemToCart, getMenus, getRestaurants} from \"../utils\";\nimport {PlusOutlined} from \"@ant-design/icons\";\n\nconst {Option} = Select;\n\nconst AddToCartButton = ({itemId}) => {\n    const [loading, setLoading] = useState(false);\n\n    const AddToCart = () => {\n        // add selected menu to the cart\n        // step1: set loading to true\n        // step2: add menu to cart and inform the server\n        setLoading(true);\n        addItemToCart(itemId)\n            .then(() => message.success(`Successfully add item`))\n            .catch((err) => message.error(err.message))\n            .finally(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Tooltip title=\"Add to shopping cart\">\n            <Button\n                loading={loading}\n                type=\"primary\"\n                icon={<PlusOutlined/>}\n                onClick={AddToCart}\n            />\n        </Tooltip>\n    );\n};\n\nconst FoodList = () => {\n    const [foodData, setFoodData] = useState([]);\n    const [curRest, setCurRest] = useState();\n    const [restaurants, setRestaurants] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [loadingRest, setLoadingRest] = useState(false);\n\n    useEffect(() => {\n        // step1: set loading restaurant = true\n        // step2: fetch restaurant list from the server\n        setLoadingRest(true);\n        getRestaurants()\n            .then((data) => {\n                setRestaurants(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoadingRest(false);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (curRest) {\n            setLoading(true);\n            getMenus(curRest)\n                .then((data) => {\n                    setFoodData(data);\n                })\n                .catch((err) => {\n                    message.error(err.message);\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        }\n    }, [curRest]);\n\n    return (\n        <>\n            <Select\n                value={curRest}\n                onSelect={(value) => setCurRest(value)}\n                placeholder=\"Select a restaurant\"\n                loading={loadingRest}\n                style={{width: 300}}\n                onChange={() => {\n                }}\n            >\n                {restaurants.map((item) => {\n                    return <Option value={item.id} key={item.id}>{item.name}</Option>;\n                })}\n            </Select>\n            {curRest && (\n                <List\n                    style={{marginTop: 20}}\n                    loading={loading}\n                    grid={{\n                        gutter: 16,\n                        xs: 1,\n                        sm: 2,\n                        md: 4,\n                        lg: 4,\n                        xl: 3,\n                        xxl: 3,\n                    }}\n                    dataSource={foodData}\n                    renderItem={(item) => (\n                        <List.Item>\n                            <Card\n                                title={item.name}\n                                extra={<AddToCartButton itemId={item.id}/>}\n                            >\n                                <img\n                                    src={item.imageUrl}\n                                    alt={item.name}\n                                    style={{height: 'auto', width: \"100%\", display: \"block\"}}\n                                />\n                                {`Price: ${item.price}`}\n                            </Card>\n                        </List.Item>\n                    )}\n                />\n            )}\n        </>\n    );\n};\n\nexport default FoodList;","import React from 'react';\n\nimport {Button, Drawer, List, message, Typography} from \"antd\";\nimport {useEffect, useState} from \"react\";\nimport {checkout, getCart} from \"../utils\";\n\nconst {Text} = Typography;\n\nconst MyCart = () => {\n    const [cartVisible, setCartVisible] = useState(false);\n    const [cartData, setCartData] = useState();\n    const [loading, setLoading] = useState(false);\n    const [checking, setChecking] = useState(false);\n\n    useEffect(() => {\n        if (!cartVisible) {\n            return;\n        }\n\n        setLoading(true);\n        getCart()\n            .then((data) => {\n                setCartData(data);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [cartVisible]);\n\n    const onCheckOut = () => {\n        setChecking(true);\n        checkout()\n            .then(() => {\n                message.success(\"Successfully checkout\");\n                setCartVisible(false);\n            })\n            .catch((err) => {\n                message.error(err.message);\n            })\n            .finally(() => {\n                setChecking(false);\n            });\n    };\n\n    const onCloseDrawer = () => {\n        setCartVisible(false);\n    };\n\n    const onOpenDrawer = () => {\n        setCartVisible(true);\n    };\n\n    return (\n        <>\n            <Button type=\"primary\" shape=\"round\" onClick={onOpenDrawer}>\n                Cart\n            </Button>\n            <Drawer\n                title=\"My Shopping Cart\"\n                onClose={onCloseDrawer}\n                visible={cartVisible}\n                width={520}\n                footer={\n                    <div\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <Text strong={true}>{`Total price: $${cartData?.totalPrice}`}</Text>\n                        <div>\n                            <Button onClick={onCloseDrawer} style={{marginRight: 8}}>\n                                Cancel\n                            </Button>\n                            <Button\n                                onClick={onCheckOut}\n                                type=\"primary\"\n                                loading={checking}\n                                disabled={loading || cartData?.orderItemList.length === 0}\n                            >\n                                Checkout\n                            </Button>\n                        </div>\n                    </div>\n                }\n            >\n                <List\n                    loading={loading}\n                    itemLayout=\"horizontal\"\n                    // dataSource={cartData?.orderItemList}\n                    dataSource={cartData ? cartData.orderItemList : []}\n                    renderItem={(item) => {\n                        console.log(item);\n                        return (\n                            <List.Item>\n                                <List.Item.Meta\n                                    // title={\"haha\"}\n                                    title={item.menuitem.name}\n                                    // 第一个$就是$\n                                    description={`$${item.price}`}\n                                />\n                            </List.Item>\n\n                        )\n                    }\n                    }\n                />\n            </Drawer>\n        </>\n    );\n};\n\nexport default MyCart;\n\n","import React, {useState} from \"react\";\nimport {Layout, Typography} from \"antd\";\nimport LoginForm from \"./components/LoginForm\";\nimport FoodList from \"./components/FoodList\";\nimport MyCart from \"./components/MyCart\";\n\nconst {Header, Content} = Layout;\nconst {Title} = Typography;\n\nfunction App() {\n    const [authed, setAuthed] = useState(false);\n    return (\n        <Layout style={{height: '100vh'}}>\n            <Header>\n                <div className=\"header\" style={{display: \"flex\", justifyContent: \"space-between\"}}>\n                    <Title level={2}\n                           style={{color: 'white', lineHeight: \"inherit\", marginBottom: 0}}>\n                        Sebastian's Yummy Land~!\n                    </Title>\n                    {authed && (\n                        <div>\n                            <MyCart />\n                        </div>\n                    )}\n                </div>\n            </Header>\n            <Content style={{\n                padding: \"50px\",\n                //  页面减去header的高度变成maxHeight的高度\n                maxHeight: \"calc(100% - 64px)\",\n                overflowY: \"auto\"\n            }}>\n                {   // 已登陆？\n                    authed\n                        ?\n                        (<FoodList/>)\n                        :\n                        <LoginForm onSuccess={() => setAuthed(true)}/>\n                }\n\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}